# Human Tasks:
# 1. Review and adjust buffer settings based on your log volume requirements
# 2. Verify Elasticsearch credentials and SSL/TLS settings in production
# 3. Monitor Fluentd memory usage and adjust resource limits if needed
# 4. Configure log rotation settings for the pos_file
# 5. Review and adjust retry settings based on your reliability requirements

# Requirement Addressed: Centralized Logging
# Location: Technical Specification/System Architecture/Monitoring and Observability
# Description: Provides a mechanism for collecting and forwarding logs from various components 
# of the Workflow Automation Platform to Elasticsearch for centralized storage and analysis.

# System-wide configurations
<system>
  log_level info
  workers 4
  root_dir /fluentd/log
</system>

# Input source configuration for Docker container logs
<source>
  @type tail
  path /var/log/*.log
  pos_file /var/log/fluentd.pos
  tag docker.*
  <parse>
    @type json
    time_key time
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
  read_from_head true
  enable_watch_timer true
  refresh_interval 5
</source>

# Filter to add metadata to log records
<filter docker.**>
  @type record_transformer
  enable_ruby true
  <record>
    hostname "#{Socket.gethostname}"
    service workflow-platform
    environment ${ENV['ENVIRONMENT']}
    tag ${tag}
    time ${time}
  </record>
</filter>

# Output configuration for Elasticsearch
<match docker.**>
  @type elasticsearch
  host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch'}"
  port 9200
  logstash_format true
  logstash_prefix workflow-logs
  logstash_dateformat %Y.%m.%d
  include_tag_key true
  type_name _doc
  tag_key @log_name
  flush_interval 5s
  
  # Buffer configuration for reliability
  <buffer>
    @type file
    path /fluentd/log/buffer
    flush_mode interval
    retry_type exponential_backoff
    flush_thread_count 4
    flush_interval 5s
    retry_forever false
    retry_max_interval 30
    retry_timeout 72h
    chunk_limit_size 8M
    queue_limit_length 32
    overflow_action block
  </buffer>

  # Connection configuration
  reconnect_on_error true
  reload_on_failure true
  reload_connections false
  request_timeout 30s

  # Health check configuration
  healthcheck_endpoint "/_cluster/health"
  healthcheck_interval 60s
  max_retry_get_es_version 3
</match>

# Monitoring agent metrics
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
  tag fluentd.monitor
</source>

# Error handling
<label @ERROR>
  <match **>
    @type file
    path /fluentd/log/error.log
    append true
    <buffer>
      @type file
      path /fluentd/log/error.buffer
      flush_mode interval
      retry_type exponential_backoff
      flush_interval 60s
      retry_forever true
      retry_max_interval 30
      chunk_limit_size 8M
    </buffer>
  </match>
</label>

# Forward all logs to stdout for debugging if needed
<match debug.**>
  @type stdout
  <format>
    @type json
  </format>
</match>