# Human Tasks:
# 1. Replace <namespace_name> with your actual namespace (e.g., workflow-platform)
# 2. Replace <environment_label> with your deployment environment (e.g., dev, staging, prod)
# 3. Replace <configmap_name> with the actual Elasticsearch ConfigMap name
# 4. Replace <secret_name> with the actual Elasticsearch Secret name
# 5. Review and adjust resource limits based on your workload requirements
# 6. Ensure persistent volume provisioner is configured in your cluster

# Requirement Addressed: Centralized Logging
# Location: Technical Specification/System Architecture/Monitoring and Observability
# Description: Provides a scalable and reliable storage solution for logs collected from 
# various components of the Workflow Automation Platform.

---
# StatefulSet for Elasticsearch cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: <namespace_name>
  labels:
    app: elasticsearch
    environment: <environment_label>
spec:
  serviceName: elasticsearch
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
        - name: increase-vm-max-map
          image: busybox:1.35
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        - name: increase-fd-ulimit
          image: busybox:1.35
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          envFrom:
            - configMapRef:
                name: <configmap_name>
            - secretRef:
                name: <secret_name>
          env:
            - name: cluster.name
              value: workflow-platform-logs
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: "elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch,elasticsearch-2.elasticsearch"
            - name: cluster.initial_master_nodes
              value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
            - name: ES_JAVA_OPTS
              value: "-Xms2g -Xmx2g"
            - name: network.host
              value: "0.0.0.0"
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: elasticsearch-data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard

---
# Service for Elasticsearch
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: <namespace_name>
  labels:
    app: elasticsearch
    environment: <environment_label>
spec:
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: transport
      port: 9300
      targetPort: 9300
      protocol: TCP
  selector:
    app: elasticsearch
  type: ClusterIP

---
# Network Policy for Elasticsearch
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: elasticsearch-network-policy
  namespace: <namespace_name>
  labels:
    app: elasticsearch
    environment: <environment_label>
spec:
  podSelector:
    matchLabels:
      app: elasticsearch
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: filebeat
        - podSelector:
            matchLabels:
              app: logstash
        - podSelector:
            matchLabels:
              app: kibana
      ports:
        - protocol: TCP
          port: 9200
        - protocol: TCP
          port: 9300
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: elasticsearch
      ports:
        - protocol: TCP
          port: 9200
        - protocol: TCP
          port: 9300
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53